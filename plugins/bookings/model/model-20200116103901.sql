/*
ts:2020-01-16 10:39:00
*/

INSERT INTO `plugin_reports_reports` (`name`, `sql`, `publish`, `delete`, `report_type`) VALUES ('Bookings Status', 'select \r\n		bookings.booking_id as `Booking Id`,\r\n		bookings.contact_id as `Student Id`,\r\n		CONCAT_WS(\' \', students.first_name, students.last_name) as `Student`,\r\n		courses.title as `Course`,\r\n		schedules.`name` as `Schedule`,\r\n		sum(if(find_in_set(\'Absent\', items.timeslot_status), 1 ,0)) as `Absent Count`,\r\n		sum(if(find_in_set(\'Absent\', items.timeslot_status), 0, 1)) as `Present Count`,\r\n		avg_result as `AVG Result`\r\n	from plugin_ib_educate_bookings bookings\r\n		inner join plugin_ib_educate_booking_items items on bookings.booking_id = items.booking_id\r\n		inner join plugin_courses_schedules_events timeslots on items.period_id = timeslots.id\r\n		inner join plugin_courses_schedules schedules on timeslots.schedule_id = schedules.id\r\n		inner join plugin_courses_courses courses on schedules.course_id = courses.id\r\n		inner join plugin_contacts3_contacts students on bookings.contact_id = students.id\r\n		left join \r\n			(\r\n				select \r\n						results.schedule_id, results.student_id, avg(results.result) as avg_result\r\n					from plugin_todos_todos2 todos\r\n						inner join plugin_todos_todos2_has_results results on todos.id = results.todo_id\r\n					where todos.deleted = 0\r\n					group by results.schedule_id, results.student_id\r\n			) results on results.schedule_id = timeslots.schedule_id and results.student_id = students.id\r\n	where bookings.`delete` = 0 and items.`delete` = 0 and bookings.booking_status <> 3 and timeslots.`delete` = 0\r\n		and items.timeslot_status is not null\r\n		and (course_id = \'{!Course!}\' or \'\' = \'{!Course!}\')\r\n	group by bookings.booking_id\r\n	having `Absent Count` > 0 or `Present Count` > 0 or `AVG Result` is not null\r\n;\r\n\r\n		', '1', '0', 'sql');
INSERT INTO `plugin_reports_parameters` (`report_id`, `type`, `name`, `value`) VALUES ((select id from plugin_reports_reports where name='Bookings Status' and `delete`=0 limit 1), 'custom', 'Course', 'select id, CONCAT_WS(\' - \' , `code`, title) as course from plugin_courses_courses where deleted=0 order by code');

ALTER TABLE `plugin_ib_educate_booking_items` MODIFY COLUMN `timeslot_status`  set('Present','Late','Early Departures','Paid','Temporary Absence','Plan','Absent') /*2020*/;
UPDATE plugin_ib_educate_booking_items SET timeslot_status = 'Absent' WHERE timeslot_status='' /*2020*/;
UPDATE plugin_ib_educate_booking_items SET timeslot_status = 'Absent,Paid' WHERE timeslot_status='Paid' /*2020*/;


UPDATE `plugin_reports_reports` SET `name`='Attendance & Grade', `sql`='select \r\n		bookings.booking_id as `Booking Id`,\r\n		bookings.contact_id as `Student Id`,\r\n		CONCAT_WS(\' \', students.first_name, students.last_name) as `Student`,\r\n		CONCAT_WS(\' \', organisations.first_name, organisations.last_name) as `Organisation`,\r\n		courses.title as `Course`,\r\n		schedules.`name` as `Schedule`,\r\n		sum(if(find_in_set(\'Absent\', items.timeslot_status), 1 ,0)) as `Absent Count`,\r\n		sum(if(find_in_set(\'Absent\', items.timeslot_status), 0, 1)) as `Present Count`,\r\n		avg_result as `AVG Result`\r\n	from plugin_ib_educate_bookings bookings\r\n		inner join plugin_ib_educate_booking_items items on bookings.booking_id = items.booking_id\r\n		inner join plugin_courses_schedules_events timeslots on items.period_id = timeslots.id\r\n		inner join plugin_courses_schedules schedules on timeslots.schedule_id = schedules.id\r\n		inner join plugin_courses_courses courses on schedules.course_id = courses.id\r\n		inner join plugin_contacts3_contacts students on bookings.contact_id = students.id\r\n		left join plugin_contacts3_relations rels on students.id = rels.child_id\r\n		left join plugin_contacts3_contacts organisations on rels.parent_id = organisations.id\r\n		left join \r\n			(\r\n				select \r\n						results.schedule_id, results.student_id, avg(results.result) as avg_result\r\n					from plugin_todos_todos2 todos\r\n						inner join plugin_todos_todos2_has_results results on todos.id = results.todo_id\r\n					where todos.deleted = 0\r\n					group by results.schedule_id, results.student_id\r\n			) results on results.schedule_id = timeslots.schedule_id and results.student_id = students.id\r\n	where bookings.`delete` = 0 and items.`delete` = 0 and bookings.booking_status <> 3 and timeslots.`delete` = 0\r\n		and items.timeslot_status is not null\r\n		and (course_id = \'{!Course!}\' or \'\' = \'{!Course!}\')\r\n	group by bookings.booking_id\r\n	having `Absent Count` > 0 or `Present Count` > 0 or `AVG Result` is not null\r\n;' WHERE (name='Bookings Status');
