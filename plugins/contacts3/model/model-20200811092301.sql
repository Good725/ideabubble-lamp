/*
ts:2020-08-11 09:23:00
*/

INSERT INTO `plugin_reports_reports` (`name`, `sql`, `publish`, `delete`, `report_type`) VALUES ('GDPR cleanse - Accredited Programme', 'select \r\n		has_delegates.contact_id as `Contact ID`, students.first_name as `First Name`, students.last_name as `Last Name`, max(timeslots.datetime_end) as last_timeslot_date\r\n	from plugin_ib_educate_bookings bookings\r\n		inner join plugin_ib_educate_bookings_has_delegates has_delegates on bookings.booking_id = has_delegates.booking_id\r\n		inner join plugin_ib_educate_booking_items items on bookings.booking_id = items.booking_id\r\n		inner join plugin_courses_schedules_events timeslots on items.period_id = timeslots.id\r\n		inner join plugin_contacts3_contacts students on has_delegates.contact_id = students.id\r\n		inner join plugin_courses_schedules schedules on timeslots.schedule_id = schedules.id\r\n		inner join plugin_courses_courses courses on schedules.course_id = courses.id\r\n		inner join plugin_courses_types ctypes on courses.type_id = ctypes.id\r\n	where bookings.`delete` = 0 and has_delegates.deleted = 0 and items.`delete` = 0 and timeslots.`delete` = 0 and students.gdpr_cleansed_datetime is null and\r\n		ctypes.type = \'Accredited programme\'\r\n	group by `Contact ID`\r\n	having last_timeslot_date < date_sub(\'{!date!}\', interval 27 month)\r\n', '1', '0', 'sql');
INSERT INTO `plugin_reports_parameters` (`report_id`, `type`, `name`) VALUES ((select id from plugin_reports_reports where name='GDPR cleanse - Accredited Programme' and `delete` = 0 limit 1), 'date', 'date');
INSERT INTO plugin_contacts3_gdpr_cleanse_reports (report_name) VALUES ('GDPR cleanse - Accredited Programme');

INSERT INTO `plugin_reports_reports` (`name`, `sql`, `publish`, `delete`, `report_type`) VALUES ('GDPR cleanse - Short Programme', 'select \r\n		has_delegates.contact_id as `Contact ID`, students.first_name as `First Name`, students.last_name as `Last Name`, max(timeslots.datetime_end) as last_timeslot_date\r\n	from plugin_ib_educate_bookings bookings\r\n		inner join plugin_ib_educate_bookings_has_delegates has_delegates on bookings.booking_id = has_delegates.booking_id\r\n		inner join plugin_ib_educate_booking_items items on bookings.booking_id = items.booking_id\r\n		inner join plugin_courses_schedules_events timeslots on items.period_id = timeslots.id\r\n		inner join plugin_contacts3_contacts students on has_delegates.contact_id = students.id\r\n		inner join plugin_courses_schedules schedules on timeslots.schedule_id = schedules.id\r\n		inner join plugin_courses_courses courses on schedules.course_id = courses.id\r\n		inner join plugin_courses_types ctypes on courses.type_id = ctypes.id\r\n	where bookings.`delete` = 0 and has_delegates.deleted = 0 and items.`delete` = 0 and timeslots.`delete` = 0 and students.gdpr_cleansed_datetime is null and\r\n		ctypes.type = \'Short programme\'\r\n	group by `Contact ID`\r\n	having last_timeslot_date < date_sub(\'{!date!}\', interval 12 month)\r\n', '1', '0', 'sql');
INSERT INTO `plugin_reports_parameters` (`report_id`, `type`, `name`) VALUES ((select id from plugin_reports_reports where name='GDPR cleanse - Short Programme' and `delete` = 0 limit 1), 'date', 'date');
INSERT INTO plugin_contacts3_gdpr_cleanse_reports (report_name) VALUES ('GDPR cleanse - Short Programme');

INSERT INTO `plugin_reports_reports` (`name`, `sql`, `publish`, `delete`, `report_type`) VALUES ('GDPR cleanse - Finance', 'select \r\n		has_delegates.contact_id as `Contact ID`, students.first_name as `First Name`, students.last_name as `Last Name`, max(timeslots.datetime_end) as last_timeslot_date\r\n	from plugin_ib_educate_bookings bookings\r\n		inner join plugin_ib_educate_bookings_has_delegates has_delegates on bookings.booking_id = has_delegates.booking_id\r\n		inner join plugin_ib_educate_booking_items items on bookings.booking_id = items.booking_id\r\n		inner join plugin_courses_schedules_events timeslots on items.period_id = timeslots.id\r\n		inner join plugin_contacts3_contacts students on has_delegates.contact_id = students.id\r\n		inner join plugin_courses_schedules schedules on timeslots.schedule_id = schedules.id\r\n		inner join plugin_courses_courses courses on schedules.course_id = courses.id\r\n		inner join plugin_courses_types ctypes on courses.type_id = ctypes.id\r\n	where bookings.`delete` = 0 and has_delegates.deleted = 0 and items.`delete` = 0 and timeslots.`delete` = 0 and students.gdpr_cleansed_datetime is null \r\n	group by `Contact ID`\r\n	having last_timeslot_date < date_sub(\'{!date!}\', interval 7 year)\r\n', '1', '0', 'sql');
INSERT INTO `plugin_reports_parameters` (`report_id`, `type`, `name`) VALUES ((select id from plugin_reports_reports where name='GDPR cleanse - Finance' and `delete` = 0 limit 1), 'date', 'date');
INSERT INTO plugin_contacts3_gdpr_cleanse_reports (report_name) VALUES ('GDPR cleanse - Finance');

INSERT INTO `plugin_reports_reports` (`name`, `sql`, `publish`, `delete`, `report_type`) VALUES ('GDPR cleanse - Application', 'select \r\n		has_delegates.contact_id as `Contact ID`, students.first_name as `First Name`, students.last_name as `Last Name`, max(timeslots.datetime_end) as last_timeslot_date\r\n	from plugin_ib_educate_bookings bookings\r\n		inner join plugin_ib_educate_bookings_has_delegates has_delegates on bookings.booking_id = has_delegates.booking_id\r\n		inner join plugin_ib_educate_booking_items items on bookings.booking_id = items.booking_id\r\n		inner join plugin_courses_schedules_events timeslots on items.period_id = timeslots.id\r\n		inner join plugin_contacts3_contacts students on has_delegates.contact_id = students.id\r\n		inner join plugin_courses_schedules schedules on timeslots.schedule_id = schedules.id\r\n		inner join plugin_courses_courses courses on schedules.course_id = courses.id\r\n		inner join plugin_courses_types ctypes on courses.type_id = ctypes.id\r\n	where bookings.`delete` = 0 and has_delegates.deleted = 0 and items.`delete` = 0 and timeslots.`delete` = 0 and students.gdpr_cleansed_datetime is null \r\n	group by `Contact ID`\r\n	having last_timeslot_date < date_sub(\'{!date!}\', interval 7 year)\r\n', '1', '0', 'sql');
INSERT INTO `plugin_reports_parameters` (`report_id`, `type`, `name`) VALUES ((select id from plugin_reports_reports where name='GDPR cleanse - Application' and `delete` = 0 limit 1), 'date', 'date');
INSERT INTO plugin_contacts3_gdpr_cleanse_reports (report_name) VALUES ('GDPR cleanse - Application');

INSERT INTO `plugin_reports_reports` (`name`, `sql`, `publish`, `delete`, `report_type`) VALUES ('GDPR cleanse - Survey', 'select \r\n		survey_answers.id as `Survey Result Answer ID`, questions.title as `Question`, survey_answers.textbox_value as `Answer`, FROM_UNIXTIME(survey_results.starttime) `Survey Datetime`\r\n	from plugin_survey_result survey_results\r\n		inner join plugin_survey_answer_result survey_answers on survey_results.id = survey_answers.survey_result_id\r\n		inner join plugin_survey_questions questions on survey_answers.question_id = questions.id\r\n		inner join engine_users users on survey_results.survey_author = users.id\r\n		left join plugin_contacts3_contacts contacts on users.id = contacts.linked_user_id\r\n	where survey_answers.textbox_value <> \'GDPR\' and questions.title in (\'Name\', \'Email\', \'Phone\', \'Mobile\') and from_unixtime(survey_results.starttime) < date_sub(\'{!date!}\', interval 12 month);', '1', '0', 'sql');
INSERT INTO `plugin_reports_parameters` (`report_id`, `type`, `name`) VALUES ((select id from plugin_reports_reports where name='GDPR cleanse - Survey' and `delete` = 0 limit 1), 'date', 'date');
INSERT INTO plugin_contacts3_gdpr_cleanse_reports (report_name) VALUES ('GDPR cleanse - Survey');

INSERT INTO `plugin_reports_reports` (`name`, `sql`, `publish`, `delete`, `report_type`) VALUES ('GDPR cleanse - Contacts Without Bookings', 'select \r\n		contacts.id as `Contact ID`, contacts.first_name as `First Name`, contacts.last_name as `Last Name`, contacts.date_created as `Date Created`\r\n	from plugin_contacts3_contacts contacts\r\n		inner join plugin_contacts3_contact_type  ctype on contacts.type = ctype.contact_type_id\r\n		left join plugin_ib_educate_bookings_has_delegates has_delegates on contacts.id = has_delegates.contact_id and has_delegates.deleted = 0\r\n	where contacts.`delete` = 0 and ctype.`name` in (\'student\', \'family\') and has_delegates.id is null and contacts.date_created < DATE_SUB(\'{!date!}\',interval 12 month);\r\n', '1', '0', 'sql');
INSERT INTO `plugin_reports_parameters` (`report_id`, `type`, `name`) VALUES ((select id from plugin_reports_reports where name='GDPR cleanse - Contacts Without Bookings' and `delete` = 0 limit 1), 'date', 'date');
INSERT INTO plugin_contacts3_gdpr_cleanse_reports (report_name) VALUES ('GDPR cleanse - Contacts Without Bookings');

INSERT INTO `plugin_reports_reports` (`name`, `sql`, `publish`, `delete`, `report_type`) VALUES ('GDPR cleanse - Contacts Us Enquiry', 'drop temporary table if exists contacts_without_bookings_tmp;\r\ncreate temporary table contacts_without_bookings_tmp (id INT PRIMARY KEY);\r\ninsert into contacts_without_bookings_tmp (id)\r\n(\r\nselect \r\n		contacts.id\r\n	from plugin_contacts3_contacts contacts\r\n		inner join plugin_contacts3_contact_type  ctype on contacts.type = ctype.contact_type_id\r\n		left join plugin_ib_educate_bookings_has_delegates has_delegates on contacts.id = has_delegates.contact_id and has_delegates.deleted = 0\r\n	where contacts.`delete` = 0 and ctype.`name` in (\'student\', \'family\') and has_delegates.id is null\r\n);\r\n\r\nselect \r\n		contacts.id as `Contact ID`, contacts.first_name as `First Name`, contacts.last_name as `Last Name`, contacts.date_created as `Date Created`\r\n	from plugin_contacts3_contacts contacts\r\n		inner join contacts_without_bookings_tmp on contacts.id = contacts_without_bookings_tmp.id\r\n		inner join plugin_contacts3_contact_type  ctype on contacts.type = ctype.contact_type_id\r\n		inner join plugin_contacts3_contact_has_tags has_tag on contacts.id = has_tag.contact_id\r\n		inner join plugin_contacts3_tags tags on has_tag.tag_id = tags.id\r\n		left join plugin_ib_educate_bookings_has_delegates has_delegates on contacts.id = has_delegates.contact_id and has_delegates.deleted = 0\r\n	where contacts.`delete` = 0 and ctype.`name` in (\'student\', \'family\') and has_delegates.id is null and tags.`name` = \'contact_us_enquiry\' and contacts.date_created < DATE_SUB(\'{!date!}\',interval 12 month)\r\n', '1', '0', 'sql');
INSERT INTO `plugin_reports_parameters` (`report_id`, `type`, `name`) VALUES ((select id from plugin_reports_reports where name='GDPR cleanse - Contacts Us Enquiry' and `delete` = 0 limit 1), 'date', 'date');
INSERT INTO plugin_contacts3_gdpr_cleanse_reports (report_name) VALUES ('GDPR cleanse - Contacts Us Enquiry');

INSERT INTO `plugin_reports_reports` (`name`, `sql`, `publish`, `delete`, `report_type`) VALUES ('GDPR cleanse - Newsletter', 'drop temporary table if exists contacts_without_bookings_tmp;\r\ncreate temporary table contacts_without_bookings_tmp (id INT PRIMARY KEY);\r\ninsert into contacts_without_bookings_tmp (id)\r\n(\r\nselect \r\n		contacts.id\r\n	from plugin_contacts3_contacts contacts\r\n		inner join plugin_contacts3_contact_type  ctype on contacts.type = ctype.contact_type_id\r\n		left join plugin_ib_educate_bookings_has_delegates has_delegates on contacts.id = has_delegates.contact_id and has_delegates.deleted = 0\r\n	where contacts.`delete` = 0 and ctype.`name` in (\'student\', \'family\') and has_delegates.id is null\r\n);\r\n\r\nselect \r\n		contacts.id as `Contact ID`, contacts.first_name as `First Name`, contacts.last_name as `Last Name`, contacts.date_created as `Date Created`\r\n	from plugin_contacts3_contacts contacts\r\n		inner join contacts_without_bookings_tmp on contacts.id = contacts_without_bookings_tmp.id\r\n		inner join plugin_contacts3_contact_type  ctype on contacts.type = ctype.contact_type_id\r\n		inner join plugin_contacts3_contact_has_tags has_tag on contacts.id = has_tag.contact_id\r\n		inner join plugin_contacts3_tags tags on has_tag.tag_id = tags.id\r\n		left join plugin_ib_educate_bookings_has_delegates has_delegates on contacts.id = has_delegates.contact_id and has_delegates.deleted = 0\r\n	where contacts.`delete` = 0 and ctype.`name` in (\'student\', \'family\') and has_delegates.id is null and tags.`name` = \'newsletter_signup\' and contacts.date_created < DATE_SUB(\'{!date!}\',interval 12 month)\r\n', '1', '0', 'sql');
INSERT INTO `plugin_reports_parameters` (`report_id`, `type`, `name`) VALUES ((select id from plugin_reports_reports where name='GDPR cleanse - Newsletter' and `delete` = 0 limit 1), 'date', 'date');
INSERT INTO plugin_contacts3_gdpr_cleanse_reports (report_name) VALUES ('GDPR cleanse - Newsletter');

INSERT INTO `plugin_reports_reports` (`name`, `sql`, `publish`, `delete`, `report_type`) VALUES ('GDPR cleanse - Waitlist', 'drop temporary table if exists contacts_without_bookings_tmp;\r\ncreate temporary table contacts_without_bookings_tmp (id INT PRIMARY KEY);\r\ninsert into contacts_without_bookings_tmp (id)\r\n(\r\nselect \r\n		contacts.id\r\n	from plugin_contacts3_contacts contacts\r\n		inner join plugin_contacts3_contact_type  ctype on contacts.type = ctype.contact_type_id\r\n		left join plugin_ib_educate_bookings_has_delegates has_delegates on contacts.id = has_delegates.contact_id and has_delegates.deleted = 0\r\n	where contacts.`delete` = 0 and ctype.`name` in (\'student\', \'family\') and has_delegates.id is null\r\n);\r\n\r\nselect \r\n		waitlist.id as `Waitlist ID`, waitlist.email, waitlist.`name`, waitlist.surname, waitlist.date_modified, waitlist.contact_id\r\n	from plugin_courses_waitlist waitlist\r\n		left join plugin_contacts3_contacts contacts on waitlist.contact_id = contacts.id\r\n		left join contacts_without_bookings_tmp on contacts.id = contacts_without_bookings_tmp.id\r\n	where waitlist.date_modified < DATE_SUB(\'{!date!}\', interval 12 month) and waitlist.name <> \'GDPR\' and (waitlist.contact_id is null or contacts_without_bookings_tmp.id is not null);\r\n', '1', '0', 'sql');
INSERT INTO `plugin_reports_parameters` (`report_id`, `type`, `name`) VALUES ((select id from plugin_reports_reports where name='GDPR cleanse - Waitlist' and `delete` = 0 limit 1), 'date', 'date');
INSERT INTO plugin_contacts3_gdpr_cleanse_reports (report_name) VALUES ('GDPR cleanse - Waitlist');


INSERT INTO `plugin_reports_reports` (`name`, `sql`, `publish`, `delete`, `report_type`) VALUES ('GDPR cleansed contacts', 'select \r\n	contacts.id as `Contact ID`, contacts.gdpr_cleansed_datetime as `Cleansed`, reports.`name` as `Report`\r\n	from plugin_contacts3_contacts contacts\r\n		inner join plugin_reports_reports reports \r\n			on contacts.gdpr_cleansed_by_report_id = reports.id\r\n	where contacts.gdpr_cleansed_datetime is not null order by contacts.gdpr_cleansed_datetime desc', '1', '0', 'sql');

UPDATE `plugin_reports_reports` SET `summary`='ANONYMISE ALL CONTACT DATA, BOOKING DATA, MESSAGING DATA,  TODOS, CONTACT,  WHERE ANY CONTACT THAT HAS A BOOKING,  DELETE ALL DOCUMENT DATA EXCL NAV DOCS, FOR ANY SCHEDULES AND COURSETYPE=ACCREDITED \r\nWHERE LASTTIMESLOT >= 821 DAYS', `sql`='select \r\n		has_delegates.contact_id as `Contact ID`, students.first_name as `First Name`, students.last_name as `Last Name`, max(timeslots.datetime_end) as last_timeslot_date\r\n	from plugin_ib_educate_bookings bookings\r\n		inner join plugin_ib_educate_bookings_has_delegates has_delegates on bookings.booking_id = has_delegates.booking_id\r\n		inner join plugin_ib_educate_booking_items items on bookings.booking_id = items.booking_id\r\n		inner join plugin_courses_schedules_events timeslots on items.period_id = timeslots.id\r\n		inner join plugin_contacts3_contacts students on has_delegates.contact_id = students.id\r\n		inner join plugin_courses_schedules schedules on timeslots.schedule_id = schedules.id\r\n		inner join plugin_courses_courses courses on schedules.course_id = courses.id\r\n		inner join plugin_courses_types ctypes on courses.type_id = ctypes.id\r\n	where bookings.`delete` = 0 and has_delegates.deleted = 0 and items.`delete` = 0 and timeslots.`delete` = 0 and students.gdpr_cleansed_datetime is null and\r\n		courses.gdpr_type = \'gdpr2\'\r\n	group by `Contact ID`\r\n	having last_timeslot_date < date_sub(\'{!date!}\', interval 27 month)' WHERE (name='GDPR cleanse - Accredited Programme');
UPDATE `plugin_reports_reports` SET `summary`='ANONYMISE ALL CONTACT DATA, BOOKING DATA, MESSAGING DATA,  TODOS, CONTACT,  WHERE ANY CONTACT THAT HAS A BOOKING,  DELETE ALL DOCUMENT DATA EXCL NAV DOCS, FOR ANY SCHEDULES WHERE LASTTIMESLOT >= 366 DAYS COURSETYPE=SHORT\r\n', `sql`='select \r\n		has_delegates.contact_id as `Contact ID`, students.first_name as `First Name`, students.last_name as `Last Name`, max(timeslots.datetime_end) as last_timeslot_date\r\n	from plugin_ib_educate_bookings bookings\r\n		inner join plugin_ib_educate_bookings_has_delegates has_delegates on bookings.booking_id = has_delegates.booking_id\r\n		inner join plugin_ib_educate_booking_items items on bookings.booking_id = items.booking_id\r\n		inner join plugin_courses_schedules_events timeslots on items.period_id = timeslots.id\r\n		inner join plugin_contacts3_contacts students on has_delegates.contact_id = students.id\r\n		inner join plugin_courses_schedules schedules on timeslots.schedule_id = schedules.id\r\n		inner join plugin_courses_courses courses on schedules.course_id = courses.id\r\n		inner join plugin_courses_types ctypes on courses.type_id = ctypes.id\r\n	where bookings.`delete` = 0 and has_delegates.deleted = 0 and items.`delete` = 0 and timeslots.`delete` = 0 and students.gdpr_cleansed_datetime is null and\r\n		courses.gdpr_type = \'gdpr1\'\r\n	group by `Contact ID`\r\n	having last_timeslot_date < date_sub(\'{!date!}\', interval 12 month)\r\n' WHERE (name='GDPR cleanse - Short Programme');
UPDATE `plugin_reports_reports` SET `summary`='DELETE ALL CONTACT FINANCE DATA, BOOKING DATA AND ACTIVITY DATA WHERE ANY CONTACT THAT HAS A BOOKING FOR ANY SCHEDULES WHERE LASTTIMESLOT >= 2555 DAYS\r\n' WHERE (name='GDPR cleanse - Finance');
UPDATE `plugin_reports_reports` SET `summary`='ANONYMISE ALL APPLICATION DATA WHERE ANY CONTACT APPLIED SINCE 1st TIMESLOT DAY OF PROGRAMME APPLICATION IS LINKED TO  confirm  from the first timeslot  >= 366 DAYS. Text replace with GDPR cleanse\r\n' WHERE (name='GDPR cleanse - Application');
UPDATE `plugin_reports_reports` SET `summary`='ANONYMISE ONLY MARKETING DATA -MIKE TO REVISE\r\nWhere field name =  First name, Last name, Email, anonymise data. 366 DAYS FROM DATE SURVEY COMPLETED\r\n' WHERE (name='GDPR cleanse - Survey');
UPDATE `plugin_reports_reports` SET `summary`='ANONYMISE ALL CONTACT DATA EXCLUDING TRAINER, EXTERNAL EXAMINER AND ORGANISATIONS WHERE ANY CONTACT LEARNER (NO BOOKINGS SINCE CONTACTCREATEDDATE >= 366 DAYS) OR (NO LOGIN SINCE LASTLOGINDATE >= 366 DAYS)\r\n' WHERE (name='GDPR cleanse - Contacts Without Bookings');
UPDATE `plugin_reports_reports` SET `summary`='ANONYMISE ALL MARKETING AND CONTACT DATA THAT HAVE NO BOOKING\r\nWHERE THEY SEND A CONTACT FORM AND  DATESENDCONTACTFORM >= 366 DAYS \r\n' WHERE (name='GDPR cleanse - Contacts Us Enquiry');
UPDATE `plugin_reports_reports` SET `summary`='ANONYMISE ALL MARKETING AND CONTACT DATA THAT HAVE NO BOOKING\r\nWHERE THEY SUBSCRIBED TO MAILINGLIST AND  DATEOPTEDINTOLIST >= 366 DAYS\r\n' WHERE (name='GDPR cleanse - Newsletter');
UPDATE `plugin_reports_reports` SET `summary`='ANONYMISE ALL MARKETING AND CONTACT DATA THAT HAVE NO BOOKING WHERE THEY SEND A WAILIST FORM AND  DATESENDWAILISTFORM >= 366 DAYS\r\n' WHERE (name='GDPR cleanse - Waitlist');
UPDATE `plugin_reports_reports` SET date_modified=NOW() WHERE `name` like 'GDPR%';

UPDATE `plugin_reports_reports` SET `sql`='select \r\n		contacts.id as `Contact ID`, contacts.first_name as `First Name`, contacts.last_name as `Last Name`, contacts.date_created as `Date Created`\r\n	from plugin_contacts3_contacts contacts\r\n		inner join plugin_contacts3_contact_type  ctype on contacts.type = ctype.contact_type_id\r\n		left join plugin_ib_educate_bookings_has_delegates has_delegates on contacts.id = has_delegates.contact_id and has_delegates.deleted = 0\r\n		left join engine_users on contacts.linked_user_id = engine_users.id\r\n	where contacts.`delete` = 0 and ctype.`name` in (\'student\', \'family\') and has_delegates.id is null and contacts.date_created < DATE_SUB(\'{!date!}\',interval 12 month)\r\n    and contacts.gdpr_cleansed_datetime is null \r\n    and (engine_users.last_login is null or engine_users.last_login <= UNIX_TIMESTAMP(DATE_SUB(\'{!date!}\',interval 12 month)))\r\n' WHERE (name='GDPR cleanse - Contacts Without Bookings');
UPDATE `plugin_reports_reports` SET `sql`='drop temporary table if exists contacts_without_bookings_tmp;\r\ncreate temporary table contacts_without_bookings_tmp (id INT PRIMARY KEY);\r\ninsert into contacts_without_bookings_tmp (id)\r\n(\r\nselect \r\n		contacts.id\r\n	from plugin_contacts3_contacts contacts\r\n		inner join plugin_contacts3_contact_type  ctype on contacts.type = ctype.contact_type_id\r\n		left join plugin_ib_educate_bookings_has_delegates has_delegates on contacts.id = has_delegates.contact_id and has_delegates.deleted = 0\r\n	where contacts.`delete` = 0 and ctype.`name` in (\'student\', \'family\') and has_delegates.id is null\r\n);\r\n\r\nselect \r\n		contacts.id as `Contact ID`, contacts.first_name as `First Name`, contacts.last_name as `Last Name`, contacts.date_created as `Date Created`\r\n	from plugin_contacts3_contacts contacts\r\n		inner join contacts_without_bookings_tmp on contacts.id = contacts_without_bookings_tmp.id\r\n		inner join plugin_contacts3_contact_type  ctype on contacts.type = ctype.contact_type_id\r\n		inner join plugin_contacts3_contact_has_tags has_tag on contacts.id = has_tag.contact_id\r\n		inner join plugin_contacts3_tags tags on has_tag.tag_id = tags.id\r\n		left join plugin_ib_educate_bookings_has_delegates has_delegates on contacts.id = has_delegates.contact_id and has_delegates.deleted = 0\r\n		left join engine_users on contacts.linked_user_id = engine_users.id\r\n	where contacts.`delete` = 0 and ctype.`name` in (\'student\', \'family\') and has_delegates.id is null and tags.`name` = \'contact_us_enquiry\' and contacts.date_created < DATE_SUB(\'{!date!}\',interval 12 month)\r\n  and contacts.gdpr_cleansed_datetime is null \r\n	and (engine_users.last_login is null or engine_users.last_login <= UNIX_TIMESTAMP(DATE_SUB(\'{!date!}\',interval 12 month)));' WHERE (name='GDPR cleanse - Contacts Us Enquiry');
UPDATE `plugin_reports_reports` SET `sql`='drop temporary table if exists contacts_without_bookings_tmp;\r\ncreate temporary table contacts_without_bookings_tmp (id INT PRIMARY KEY);\r\ninsert into contacts_without_bookings_tmp (id)\r\n(\r\nselect \r\n		contacts.id\r\n	from plugin_contacts3_contacts contacts\r\n		inner join plugin_contacts3_contact_type  ctype on contacts.type = ctype.contact_type_id\r\n		left join plugin_ib_educate_bookings_has_delegates has_delegates on contacts.id = has_delegates.contact_id and has_delegates.deleted = 0\r\n	where contacts.`delete` = 0 and ctype.`name` in (\'student\', \'family\') and has_delegates.id is null\r\n);\r\n\r\nselect \r\n		contacts.id as `Contact ID`, contacts.first_name as `First Name`, contacts.last_name as `Last Name`, contacts.date_created as `Date Created`\r\n	from plugin_contacts3_contacts contacts\r\n		inner join contacts_without_bookings_tmp on contacts.id = contacts_without_bookings_tmp.id\r\n		inner join plugin_contacts3_contact_type  ctype on contacts.type = ctype.contact_type_id\r\n		inner join plugin_contacts3_contact_has_tags has_tag on contacts.id = has_tag.contact_id\r\n		inner join plugin_contacts3_tags tags on has_tag.tag_id = tags.id\r\n		left join plugin_ib_educate_bookings_has_delegates has_delegates on contacts.id = has_delegates.contact_id and has_delegates.deleted = 0\r\n		left join engine_users on contacts.linked_user_id = engine_users.id\r\n	where contacts.`delete` = 0 and ctype.`name` in (\'student\', \'family\') and has_delegates.id is null and tags.`name` = \'newsletter_signup\' and contacts.date_created < DATE_SUB(\'{!date!}\',interval 12 month)\r\n	and contacts.gdpr_cleansed_datetime is null \r\n	and (engine_users.last_login is null or engine_users.last_login <= UNIX_TIMESTAMP(DATE_SUB(\'{!date!}\',interval 12 month)));' WHERE (name='GDPR cleanse - Newsletter');
