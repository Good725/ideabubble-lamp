/*
ts:2020-10-05 11:35:00
*/

UPDATE `plugin_reports_reports` SET `sql`='select \r\n		applications.id as `Application ID`, applications.booking_id as `Booking ID`, has_delegates.contact_id as `Contact ID`, students.first_name as `First Name`, students.last_name as `Last Name`, min(timeslots.datetime_end) as first_timeslot_date\r\n	from plugin_ib_educate_bookings bookings\r\n		inner join plugin_ib_educate_bookings_has_applications applications on bookings.booking_id = applications.booking_id\r\n		inner join plugin_ib_educate_bookings_has_delegates has_delegates on bookings.booking_id = has_delegates.booking_id and has_delegates.contact_id = applications.delegate_id\r\n		inner join plugin_ib_educate_booking_items items on bookings.booking_id = items.booking_id\r\n		inner join plugin_courses_schedules_events timeslots on items.period_id = timeslots.id\r\n		inner join plugin_contacts3_contacts students on has_delegates.contact_id = students.id\r\n		inner join plugin_courses_schedules schedules on timeslots.schedule_id = schedules.id\r\n		inner join plugin_courses_courses courses on schedules.course_id = courses.id\r\n		left join plugin_courses_types ctypes on courses.type_id = ctypes.id\r\n	where applications.gdpr_cleansed_datetime is null and bookings.`delete` = 0 and has_delegates.deleted = 0 and items.`delete` = 0 and timeslots.`delete` = 0 and students.gdpr_cleansed_datetime is null \r\n	group by `Contact ID`\r\n	having first_timeslot_date < date_sub(\'{!date!}\', interval 365 day)\r\n' WHERE (`name`='GDPR cleanse - Application');
ALTER TABLE plugin_ib_educate_bookings_has_applications ADD COLUMN gdpr_cleansed_datetime DATETIME;
ALTER TABLE plugin_ib_educate_bookings_has_applications ADD COLUMN gdpr_cleansed_by_report_id INT;


UPDATE `plugin_reports_reports` SET `sql`='drop temporary table if exists contacts_with_bookings;\r\ncreate temporary table contacts_with_bookings (contact_id int primary key);\r\n\r\ninsert ignore into contacts_with_bookings\r\n(\r\n	select \r\n			contacts.id as `Contact ID`\r\n		from plugin_contacts3_contacts contacts\r\n			inner join plugin_contacts3_contact_type  ctype on contacts.type = ctype.contact_type_id\r\n			inner join plugin_ib_educate_bookings_has_delegates has_delegates on contacts.id = has_delegates.contact_id and has_delegates.deleted = 0\r\n			inner join plugin_ib_educate_bookings bookings on has_delegates.booking_id = bookings.booking_id\r\n			inner join plugin_ib_educate_bookings_rollcall rollcall on bookings.booking_id = rollcall.booking_id and has_delegates.contact_id = rollcall.delegate_id and rollcall.`delete` = 0 and rollcall.booking_status <> 3\r\n			inner join plugin_courses_schedules_events timeslots on rollcall.timeslot_id = timeslots.id\r\n		where contacts.`delete` = 0 and contacts.gdpr_cleansed_datetime is null\r\n		group by contacts.id\r\n		having max(timeslots.datetime_end) >= DATE_SUB(\'{!date!}\',interval 12 month)\r\n);\r\n\r\ninsert ignore into contacts_with_bookings\r\n(\r\n	select \r\n			contacts.id as `Contact ID`\r\n		from plugin_contacts3_contacts contacts\r\n			inner join plugin_contacts3_contact_type  ctype on contacts.type = ctype.contact_type_id\r\n			inner join plugin_ib_educate_bookings bookings on bookings.contact_id = contacts.id\r\n		where contacts.`delete` = 0 and bookings.created_date >= DATE_SUB(\'{!date!}\',interval 12 month)\r\n			and contacts.gdpr_cleansed_datetime is null\r\n);\r\n\r\ninsert ignore into contacts_with_bookings\r\n(\r\n	select \r\n			contacts.id as `Contact ID`\r\n		from plugin_contacts3_contacts contacts\r\n			inner join plugin_contacts3_contact_type  ctype on contacts.type = ctype.contact_type_id\r\n			inner join plugin_ib_educate_bookings bookings on bookings.bill_payer = contacts.id\r\n		where contacts.`delete` = 0 and bookings.created_date >= DATE_SUB(\'{!date!}\',interval 12 month)\r\n			and contacts.gdpr_cleansed_datetime is null\r\n);\r\n\r\nselect \r\n		contacts.id as `Contact ID`, contacts.first_name as `First Name`, contacts.last_name as `Last Name`, contacts.date_created as `Date Created`\r\n	from plugin_contacts3_contacts contacts\r\n		inner join plugin_contacts3_contact_type  ctype on contacts.type = ctype.contact_type_id\r\n		left join contacts_with_bookings on contacts.id = contacts_with_bookings.contact_id\r\n		left join engine_users on contacts.linked_user_id = engine_users.id\r\n	where contacts.`delete` = 0 and ctype.`name` in (\'student\', \'family\', \'org_rep\') and contacts_with_bookings.contact_id is null and contacts.date_created < DATE_SUB(\'{!date!}\',interval 12 month)\r\n		and contacts.gdpr_cleansed_datetime is null \r\n		and (engine_users.last_login is null or engine_users.last_login <= UNIX_TIMESTAMP(DATE_SUB(\'{!date!}\',interval 12 month)))\r\nunion\r\nselect \r\n		orgs.id as `Contact ID`, orgs.first_name as `First Name`, orgs.last_name as `Last Name`, orgs.date_created as `Date Created`\r\n	from plugin_contacts3_contacts orgs \r\n		left join plugin_contacts3_relations rels on orgs.id = rels.parent_id\r\n		left join plugin_contacts3_contacts reps on rels.child_id = reps.id and reps.`delete` = 0\r\nwhere orgs.type=3 and orgs.`delete` = 0 and orgs.gdpr_cleansed_datetime is null and orgs.date_created < DATE_SUB(\'{!date!}\',interval 12 month)\r\ngroup by orgs.id\r\nhaving sum(if(reps.gdpr_cleansed_datetime is null, 1, 0)) = 0;\r\n' WHERE (`name`='GDPR cleanse - Contacts Without Bookings');
UPDATE `plugin_reports_reports` SET `sql`='drop temporary table if exists contacts_without_bookings_tmp;\r\ncreate temporary table contacts_without_bookings_tmp (id INT PRIMARY KEY);\r\ninsert into contacts_without_bookings_tmp (id)\r\n(\r\nselect \r\n		contacts.id\r\n	from plugin_contacts3_contacts contacts\r\n		inner join plugin_contacts3_contact_type  ctype on contacts.type = ctype.contact_type_id\r\n		left join plugin_ib_educate_bookings_has_delegates has_delegates on contacts.id = has_delegates.contact_id and has_delegates.deleted = 0\r\n	where contacts.`delete` = 0 and ctype.`name` in (\'student\', \'family\') and has_delegates.id is null\r\n);\r\n\r\nselect \r\n		waitlist.id as `Waitlist ID`, waitlist.email, waitlist.`name`, waitlist.surname, waitlist.date_modified, waitlist.contact_id as `Contact ID`\r\n	from plugin_courses_waitlist waitlist\r\n		left join plugin_contacts3_contacts contacts on waitlist.contact_id = contacts.id\r\n		left join contacts_without_bookings_tmp on contacts.id = contacts_without_bookings_tmp.id\r\n	where waitlist.date_modified < DATE_SUB(\'{!date!}\', interval 12 month) and waitlist.name <> \'GDPR\' and (waitlist.contact_id is null or contacts_without_bookings_tmp.id is not null);\r\n' WHERE (`name`='GDPR cleanse - Waitlist');
UPDATE `plugin_reports_reports` SET `sql`='drop temporary table if exists contacts_with_bookings;\r\ncreate temporary table contacts_with_bookings (contact_id int primary key);\r\n\r\ninsert ignore into contacts_with_bookings\r\n(\r\n	select \r\n			contacts.id as `Contact ID`\r\n		from plugin_contacts3_contacts contacts\r\n			inner join plugin_contacts3_contact_type  ctype on contacts.type = ctype.contact_type_id\r\n			inner join plugin_ib_educate_bookings_has_delegates has_delegates on contacts.id = has_delegates.contact_id and has_delegates.deleted = 0\r\n			inner join plugin_ib_educate_bookings bookings on has_delegates.booking_id = bookings.booking_id\r\n			inner join plugin_ib_educate_bookings_rollcall rollcall on bookings.booking_id = rollcall.booking_id and has_delegates.contact_id = rollcall.delegate_id and rollcall.`delete` = 0 and rollcall.booking_status <> 3\r\n			inner join plugin_courses_schedules_events timeslots on rollcall.timeslot_id = timeslots.id\r\n		where contacts.`delete` = 0 and contacts.gdpr_cleansed_datetime is null\r\n		group by contacts.id\r\n		having max(timeslots.datetime_end) >= DATE_SUB(\'{!date!}\',interval 12 month)\r\n);\r\n\r\ninsert ignore into contacts_with_bookings\r\n(\r\n	select \r\n			contacts.id as `Contact ID`\r\n		from plugin_contacts3_contacts contacts\r\n			inner join plugin_contacts3_contact_type  ctype on contacts.type = ctype.contact_type_id\r\n			inner join plugin_ib_educate_bookings bookings on bookings.contact_id = contacts.id\r\n		where contacts.`delete` = 0 and bookings.created_date >= DATE_SUB(\'{!date!}\',interval 12 month)\r\n			and contacts.gdpr_cleansed_datetime is null\r\n);\r\n\r\ninsert ignore into contacts_with_bookings\r\n(\r\n	select \r\n			contacts.id as `Contact ID`\r\n		from plugin_contacts3_contacts contacts\r\n			inner join plugin_contacts3_contact_type  ctype on contacts.type = ctype.contact_type_id\r\n			inner join plugin_ib_educate_bookings bookings on bookings.bill_payer = contacts.id\r\n		where contacts.`delete` = 0 and bookings.created_date >= DATE_SUB(\'{!date!}\',interval 12 month)\r\n			and contacts.gdpr_cleansed_datetime is null\r\n);\r\n\r\nselect \r\n		contacts.id as `Contact ID`, contacts.first_name as `First Name`, contacts.last_name as `Last Name`, contacts.date_created as `Date Created`\r\n	from plugin_contacts3_contacts contacts\r\n		left join contacts_with_bookings on contacts.id = contacts_with_bookings.contact_id\r\n		inner join plugin_contacts3_contact_type  ctype on contacts.type = ctype.contact_type_id\r\n		inner join plugin_contacts3_contact_has_tags has_tag on contacts.id = has_tag.contact_id\r\n		inner join plugin_contacts3_tags tags on has_tag.tag_id = tags.id\r\n		left join engine_users on contacts.linked_user_id = engine_users.id\r\n	where contacts.`delete` = 0 and ctype.`name` in (\'student\', \'family\', \'org_rep\') and contacts_with_bookings.contact_id is null and tags.`name` = \'contact_us_enquiry\' and contacts.date_created < DATE_SUB(\'{!date!}\',interval 12 month)\r\n  and contacts.gdpr_cleansed_datetime is null \r\n	and (engine_users.last_login is null or engine_users.last_login <= UNIX_TIMESTAMP(DATE_SUB(\'{!date!}\',interval 12 month)));' WHERE (`name`='GDPR cleanse - Contacts Us Enquiry');
UPDATE `plugin_reports_reports` SET `sql`='drop temporary table if exists contacts_with_bookings;\r\ncreate temporary table contacts_with_bookings (contact_id int primary key);\r\n\r\ninsert ignore into contacts_with_bookings\r\n(\r\n	select \r\n			contacts.id as `Contact ID`\r\n		from plugin_contacts3_contacts contacts\r\n			inner join plugin_contacts3_contact_type  ctype on contacts.type = ctype.contact_type_id\r\n			inner join plugin_ib_educate_bookings_has_delegates has_delegates on contacts.id = has_delegates.contact_id and has_delegates.deleted = 0\r\n			inner join plugin_ib_educate_bookings bookings on has_delegates.booking_id = bookings.booking_id\r\n		where contacts.`delete` = 0 and bookings.created_date >= DATE_SUB(\'{!date!}\',interval 12 month)\r\n			and contacts.gdpr_cleansed_datetime is null\r\n);\r\n\r\ninsert ignore into contacts_with_bookings\r\n(\r\n	select \r\n			contacts.id as `Contact ID`\r\n		from plugin_contacts3_contacts contacts\r\n			inner join plugin_contacts3_contact_type  ctype on contacts.type = ctype.contact_type_id\r\n			inner join plugin_ib_educate_bookings bookings on bookings.contact_id = contacts.id\r\n		where contacts.`delete` = 0 and bookings.created_date >= DATE_SUB(\'{!date!}\',interval 12 month)\r\n			and contacts.gdpr_cleansed_datetime is null\r\n);\r\n\r\ninsert ignore into contacts_with_bookings\r\n(\r\n	select \r\n			contacts.id as `Contact ID`\r\n		from plugin_contacts3_contacts contacts\r\n			inner join plugin_contacts3_contact_type  ctype on contacts.type = ctype.contact_type_id\r\n			inner join plugin_ib_educate_bookings bookings on bookings.bill_payer = contacts.id\r\n		where contacts.`delete` = 0 and bookings.created_date >= DATE_SUB(\'{!date!}\',interval 12 month)\r\n			and contacts.gdpr_cleansed_datetime is null\r\n);\r\n\r\n\r\nselect \r\n		contacts.id as `Contact ID`, contacts.first_name as `First Name`, contacts.last_name as `Last Name`, contacts.date_created as `Date Created`\r\n	from plugin_contacts3_contacts contacts\r\n		left join contacts_with_bookings on contacts.id = contacts_with_bookings.contact_id\r\n		inner join plugin_contacts3_contact_type  ctype on contacts.type = ctype.contact_type_id\r\n		inner join plugin_contacts3_contact_has_tags has_tag on contacts.id = has_tag.contact_id\r\n		inner join plugin_contacts3_tags tags on has_tag.tag_id = tags.id\r\n		left join engine_users on contacts.linked_user_id = engine_users.id\r\n	where contacts.`delete` = 0 and ctype.`name` in (\'student\', \'family\') and contacts_with_bookings.contact_id is null and tags.`name` = \'newsletter_signup\' and contacts.date_created < DATE_SUB(\'{!date!}\',interval 12 month)\r\n	and contacts.gdpr_cleansed_datetime is null \r\n	and (engine_users.last_login is null or engine_users.last_login <= UNIX_TIMESTAMP(DATE_SUB(\'{!date!}\',interval 12 month)));' WHERE (`name`='GDPR cleanse - Newsletter');

UPDATE `plugin_reports_reports` SET `sql`='select \r\n		survey_answers.id as `Survey Result Answer ID`, questions.title as `Question`, survey_answers.textbox_value as `Answer`, FROM_UNIXTIME(survey_results.starttime) `Survey Datetime`\r\n	from plugin_survey_result survey_results\r\n		inner join plugin_survey_answer_result survey_answers on survey_results.id = survey_answers.survey_result_id\r\n		inner join plugin_survey_questions questions on survey_answers.question_id = questions.id\r\n		\r\n	where survey_answers.textbox_value <> \'GDPR\' and questions.title in (\'Firstname\', \'Lastname\', \'Name\', \'Email\', \'Phone\', \'Mobile\', \'<p>Firstname</p>\', \'<p>Lastname</p>\', \'<p>Name</p>\', \'<p>Email</p>\', \'<p>Phone</p>\', \'<p>Mobile</p>\') and from_unixtime(survey_results.starttime) < date_sub(\'{!date!}\', interval 12 month);' WHERE (`name`='GDPR cleanse - Survey');
