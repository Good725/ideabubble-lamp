/*
ts:2016-11-22 10:42:00
*/

update plugin_dashboards d
		inner join plugin_dashboards_gadgets g on d.id = g.dashboard_id and g.deleted = 0
		inner join plugin_reports_reports r ON g.gadget_id = r.id and r.`delete` = 0
	set
		r.widget_sql = r.`sql`
	where
		d.title in ('My Roll Calls', 'My Schedules', 'My Attendance', 'Attendance', 'Bookings', 'Revenue', 'Availability', 'Active Schedules') and
		(r.widget_sql is null or r.widget_sql = '');

update plugin_reports_reports
  set widget_sql = replace(widget_sql, 'ORDER BY `day` ASC;', 'ORDER BY `day` ASC');

update plugin_reports_reports
  set `sql` = replace(`sql`, 'ORDER BY `day` ASC;', 'ORDER BY `day` ASC');

UPDATE `plugin_reports_reports` SET `sql`='SELECT DISTINCT DATE_FORMAT(e.datetime_start, \'%m/%Y\') AS `month`, co.id as `course id`, co.title as `course`, s.id as `schedule id`, s.name as `schedule`\r\n			FROM plugin_courses_schedules_events e \r\n				INNER JOIN plugin_courses_schedules s ON s.id = e.schedule_id AND e.`delete` = 0 AND s.`delete` = 0\r\n				INNER JOIN plugin_courses_courses co ON s.course_id = co.id\r\n				INNER JOIN plugin_courses_locations l ON s.location_id = l.id\r\n				LEFT JOIN plugin_courses_locations pl ON l.parent_id = pl.id\r\n			WHERE \'{!DASHBOARD-FROM!}\' <= e.datetime_start AND DATE_ADD(\'{!DASHBOARD-TO!}\', INTERVAL 1 DAY) > e.datetime_start\r\n			ORDER BY e.datetime_start ASC, `course`, `schedule`\r\n' WHERE (`name` = 'Active Schedules By Month');
UPDATE `plugin_reports_reports` SET `sql`='SELECT DISTINCT DATE_FORMAT(e.datetime_start, \'%d/%m/%Y\') AS `day`, co.id as `course id`, co.title as `course`, s.id as `schedule id`, s.name as `schedule`\r\n			FROM plugin_courses_schedules_events e \r\n				INNER JOIN plugin_courses_schedules s ON s.id = e.schedule_id AND e.`delete` = 0 AND s.`delete` = 0\r\n				INNER JOIN plugin_courses_courses co ON s.course_id = co.id\r\n				INNER JOIN plugin_courses_locations l ON s.location_id = l.id\r\n				LEFT JOIN plugin_courses_locations pl ON l.parent_id = pl.id\r\n			WHERE \'{!DASHBOARD-FROM!}\' <= e.datetime_start AND DATE_ADD(\'{!DASHBOARD-TO!}\', INTERVAL 1 DAY) > e.datetime_start\r\n			ORDER BY e.datetime_start ASC, `course`, `schedule`' WHERE (`name` = 'Active Schedules By Day');
UPDATE `plugin_reports_reports` SET `sql`='SELECT DISTINCT co.id as `course id`, co.title as `course`, s.id as `schedule id`, s.name as `schedule`\r\n			FROM plugin_courses_schedules_events e \r\n				INNER JOIN plugin_courses_schedules s ON s.id = e.schedule_id AND e.`delete` = 0 AND s.`delete` = 0\r\n				INNER JOIN plugin_courses_courses co ON s.course_id = co.id\r\n				INNER JOIN plugin_courses_locations l ON s.location_id = l.id\r\n				LEFT JOIN plugin_courses_locations pl ON l.parent_id = pl.id\r\n			WHERE \'{!DASHBOARD-FROM!}\' <= e.datetime_start AND DATE_ADD(\'{!DASHBOARD-TO!}\', INTERVAL 1 DAY) > e.datetime_start\r\n			ORDER BY `course`, `schedule`\r\n' WHERE (`name` = 'Active Schedules By Course');
UPDATE `plugin_reports_reports` SET `sql`='SELECT DISTINCT IFNULL(pl.name, l.name) AS `location`, co.id as `course id`, co.title as `course`, s.id as `schedule id`, s.name as `schedule`\r\n			FROM plugin_courses_schedules_events e \r\n				INNER JOIN plugin_courses_schedules s ON s.id = e.schedule_id AND e.`delete` = 0 AND s.`delete` = 0\r\n				INNER JOIN plugin_courses_courses co ON s.course_id = co.id\r\n				INNER JOIN plugin_courses_locations l ON s.location_id = l.id\r\n				LEFT JOIN plugin_courses_locations pl ON l.parent_id = pl.id\r\n			WHERE \'{!DASHBOARD-FROM!}\' <= e.datetime_start AND DATE_ADD(\'{!DASHBOARD-TO!}\', INTERVAL 1 DAY) > e.datetime_start\r\n			ORDER BY `location`, `course`, `schedule`\r\n' WHERE (`name` = 'Active Schedules By Location');
UPDATE `plugin_reports_reports` SET `sql`='SELECT DISTINCT IFNULL(pl.name, l.name) AS `location`, l.name AS `room`, co.id as `course id`, co.title as `course`, s.id as `schedule id`, s.name as `schedule`\r\n			FROM plugin_courses_schedules_events e \r\n				INNER JOIN plugin_courses_schedules s ON s.id = e.schedule_id AND e.`delete` = 0 AND s.`delete` = 0\r\n				INNER JOIN plugin_courses_courses co ON s.course_id = co.id\r\n				INNER JOIN plugin_courses_locations l ON s.location_id = l.id\r\n				LEFT JOIN plugin_courses_locations pl ON l.parent_id = pl.id\r\n			WHERE \'{!DASHBOARD-FROM!}\' <= e.datetime_start AND DATE_ADD(\'{!DASHBOARD-TO!}\', INTERVAL 1 DAY) > e.datetime_start\r\n			ORDER BY `location`, `room`, `course`, `schedule`\r\n' WHERE (`name` = 'Active Schedules By Room');
UPDATE `plugin_reports_reports` SET `sql`='SELECT DISTINCT CONCAT_WS(\' \', teachers.first_name, teachers.last_name) AS `teacher`, IFNULL(pl.name, l.name) AS `location`, l.name AS `room`, co.id as `course id`, co.title as `course`, s.id as `schedule id`, s.name as `schedule`\r\n			FROM plugin_courses_schedules_events e \r\n				INNER JOIN plugin_courses_schedules s ON s.id = e.schedule_id AND e.`delete` = 0 AND s.`delete` = 0\r\n				INNER JOIN plugin_courses_courses co ON s.course_id = co.id\r\n				INNER JOIN plugin_courses_locations l ON s.location_id = l.id\r\n				INNER JOIN plugin_contacts3_contacts teachers ON s.trainer_id = teachers.id\r\n				LEFT JOIN plugin_courses_locations pl ON l.parent_id = pl.id\r\n			WHERE \'{!DASHBOARD-FROM!}\' <= e.datetime_start AND DATE_ADD(\'{!DASHBOARD-TO!}\', INTERVAL 1 DAY) > e.datetime_start\r\n			ORDER BY `teacher`, `location`, `room`, `course`, `schedule`' WHERE (`name` = 'Active Schedules By Teacher');

UPDATE `plugin_reports_reports` SET `sql`='SELECT DISTINCT DATE_FORMAT(e.datetime_start, \'%m/%Y\') AS `month`, co.id as `course id`, co.title as `course`, s.id, s.name as `schedule`\n			FROM plugin_contacts3_contacts ca\n				INNER JOIN plugin_contacts3_contact_has_notifications n \n					ON (ca.id = n.contact_id OR ca.notifications_group_id = n.group_id) AND n.notification_id = 1\n				INNER JOIN engine_users u ON n.`value` = u.email\n				INNER JOIN plugin_courses_schedules_events e ON ca.id = e.trainer_id AND e.`delete` = 0\n				INNER JOIN plugin_courses_schedules s ON s.id = e.schedule_id AND s.`delete` = 0\n				INNER JOIN plugin_courses_courses co ON s.course_id = co.id\n				INNER JOIN plugin_courses_locations l ON s.location_id = l.id\n				LEFT JOIN plugin_courses_locations pl ON l.parent_id = pl.id\n			WHERE \'{!DASHBOARD-FROM!}\' <= e.datetime_start AND DATE_ADD(\'{!DASHBOARD-TO!}\', INTERVAL 1 DAY) > e.datetime_start AND u.id = \'{!me!}\'\n			ORDER BY e.datetime_start ASC, `course`, `schedule`\r\n' WHERE (`name` = 'My Schedules By Month');
UPDATE `plugin_reports_reports` SET `sql`='SELECT DISTINCT DATE_FORMAT(e.datetime_start, \'%d/%m/%Y\') AS `day`, co.id as `course id`, co.title as `course`, s.id, s.name as `schedule`\n			FROM plugin_contacts3_contacts ca\n				INNER JOIN plugin_contacts3_contact_has_notifications n \n					ON (ca.id = n.contact_id OR ca.notifications_group_id = n.group_id) AND n.notification_id = 1\n				INNER JOIN engine_users u ON n.`value` = u.email\n				INNER JOIN plugin_courses_schedules_events e ON ca.id = e.trainer_id AND e.`delete` = 0\n				INNER JOIN plugin_courses_schedules s ON s.id = e.schedule_id AND s.`delete` = 0\n				INNER JOIN plugin_courses_courses co ON s.course_id = co.id\n				INNER JOIN plugin_courses_locations l ON s.location_id = l.id\n				LEFT JOIN plugin_courses_locations pl ON l.parent_id = pl.id\n			WHERE \'{!DASHBOARD-FROM!}\' <= e.datetime_start AND DATE_ADD(\'{!DASHBOARD-TO!}\', INTERVAL 1 DAY) > e.datetime_start AND u.id = \'{!me!}\'\n			ORDER BY e.datetime_start ASC, `course`, `schedule`\r\n' WHERE (`name` = 'My Schedules By Day');
UPDATE `plugin_reports_reports` SET `sql`='SELECT DISTINCT co.id as `course id`, co.title as `course`, s.id, s.name as `schedule`\n			FROM plugin_contacts3_contacts ca\n				INNER JOIN plugin_contacts3_contact_has_notifications n \n					ON (ca.id = n.contact_id OR ca.notifications_group_id = n.group_id) AND n.notification_id = 1\n				INNER JOIN engine_users u ON n.`value` = u.email\n				INNER JOIN plugin_courses_schedules_events e ON ca.id = e.trainer_id AND e.`delete` = 0\n				INNER JOIN plugin_courses_schedules s ON s.id = e.schedule_id AND s.`delete` = 0\n				INNER JOIN plugin_courses_courses co ON s.course_id = co.id\n				INNER JOIN plugin_courses_locations l ON s.location_id = l.id\n				LEFT JOIN plugin_courses_locations pl ON l.parent_id = pl.id\n			WHERE \'{!DASHBOARD-FROM!}\' <= e.datetime_start AND DATE_ADD(\'{!DASHBOARD-TO!}\', INTERVAL 1 DAY) > e.datetime_start AND u.id = \'{!me!}\'\n			ORDER BY e.datetime_start ASC, `course`, `schedule`\r\n' WHERE (`name` = 'My Schedules By Course');
UPDATE `plugin_reports_reports` SET `sql`='SELECT DISTINCT IFNULL(pl.name, l.name) AS `location`, co.id as `course id`, co.title as `course`, s.id, s.name as `schedule`\r\n			FROM plugin_contacts3_contacts ca\r\n				INNER JOIN plugin_contacts3_contact_has_notifications n \r\n					ON (ca.id = n.contact_id OR ca.notifications_group_id = n.group_id) AND n.notification_id = 1\r\n				INNER JOIN engine_users u ON n.`value` = u.email\r\n				INNER JOIN plugin_courses_schedules_events e ON ca.id = e.trainer_id AND e.`delete` = 0\r\n				INNER JOIN plugin_courses_schedules s ON s.id = e.schedule_id AND s.`delete` = 0\r\n				INNER JOIN plugin_courses_courses co ON s.course_id = co.id\r\n				INNER JOIN plugin_courses_locations l ON s.location_id = l.id\r\n				LEFT JOIN plugin_courses_locations pl ON l.parent_id = pl.id\r\n			WHERE \'{!DASHBOARD-FROM!}\' <= e.datetime_start AND DATE_ADD(\'{!DASHBOARD-TO!}\', INTERVAL 1 DAY) > e.datetime_start AND u.id = \'{!me!}\'\r\n			ORDER BY e.datetime_start ASC, `location`, `course`, `schedule`\r\n' WHERE (`name` = 'My Schedules By Location');
UPDATE `plugin_reports_reports` SET `sql`='SELECT DISTINCT IFNULL(pl.name, l.name) AS `location`, l.name AS `room`, co.id as `course id`, co.title as `course`, s.id, s.name as `schedule`\r\n			FROM plugin_contacts3_contacts ca\r\n				INNER JOIN plugin_contacts3_contact_has_notifications n \r\n					ON (ca.id = n.contact_id OR ca.notifications_group_id = n.group_id) AND n.notification_id = 1\r\n				INNER JOIN engine_users u ON n.`value` = u.email\r\n				INNER JOIN plugin_courses_schedules_events e ON ca.id = e.trainer_id AND e.`delete` = 0\r\n				INNER JOIN plugin_courses_schedules s ON s.id = e.schedule_id AND s.`delete` = 0\r\n				INNER JOIN plugin_courses_courses co ON s.course_id = co.id\r\n				INNER JOIN plugin_courses_locations l ON s.location_id = l.id\r\n				LEFT JOIN plugin_courses_locations pl ON l.parent_id = pl.id\r\n			WHERE \'{!DASHBOARD-FROM!}\' <= e.datetime_start AND DATE_ADD(\'{!DASHBOARD-TO!}\', INTERVAL 1 DAY) > e.datetime_start AND u.id = \'{!me!}\'\r\n			ORDER BY e.datetime_start ASC, `location`, `room`, `course`, `schedule`\r\n' WHERE (`name` = 'My Schedules By Room');
UPDATE `plugin_reports_reports` SET `sql`='SELECT DISTINCT st.first_name AS `first name`, st.last_name AS `last name`, IFNULL(pl.name, l.name) AS `location`, l.name AS `room`, co.id as `course id`, co.title as `course`, s.id, s.name as `schedule`\n					FROM plugin_contacts3_contacts ca\n						INNER JOIN plugin_contacts3_contact_has_notifications n \n							ON (ca.id = n.contact_id OR ca.notifications_group_id = n.group_id) AND n.notification_id = 1\n						INNER JOIN engine_users u ON n.`value` = u.email\n						INNER JOIN plugin_courses_schedules_events e ON ca.id = e.trainer_id AND e.`delete` = 0\n						INNER JOIN plugin_courses_schedules s ON s.id = e.schedule_id AND s.`delete` = 0\r\n						INNER JOIN plugin_courses_courses co ON s.course_id = co.id\r\n						INNER JOIN plugin_courses_locations l ON s.location_id = l.id\r\n						LEFT JOIN plugin_courses_locations pl ON l.parent_id = pl.id\n						INNER JOIN plugin_ib_educate_booking_has_schedules bs ON s.id = bs.schedule_id AND bs.deleted = 0\n						INNER JOIN plugin_ib_educate_bookings b ON bs.booking_id = b.booking_id AND b.`delete` = 0\r\n						INNER JOIN plugin_contacts3_contacts st ON b.contact_id = st.id\n					WHERE \'{!DASHBOARD-FROM!}\' <= e.datetime_start AND DATE_ADD(\'{!DASHBOARD-TO!}\', INTERVAL 1 DAY) > e.datetime_start AND u.id = \'{!me!}\'\n					ORDER BY st.first_name, st.last_name, `location`, `room`, `course`, `schedule`' WHERE (`name` = 'My Schedules By Student');

update plugin_reports_reports
	set `sql` = replace(`sql`, 'b.booking_status = 2', 'b.booking_status in (2, 4, 5)')
	where `sql` like '%b.booking_status = 2%';

update plugin_reports_reports
	set `widget_sql` = replace(`widget_sql`, 'b.booking_status = 2', 'b.booking_status in (2, 4, 5)')
	where `widget_sql` like '%b.booking_status = 2%';

UPDATE `plugin_reports_reports` SET `sql`='SELECT b.booking_id AS `booking id`,  CONCAT_WS(\' \', students.first_name, students.last_name) AS `student`, pl.name AS `location`, l.name AS `room`, co.title AS `course`, s.name AS `schedule`, DATE_FORMAT(b.created_date, \'%d/%m/%Y\') AS `booked day`, CONCAT_WS(\' \', teachers.first_name, teachers.last_name) AS `teacher`\n	FROM plugin_courses_schedules s\n		INNER JOIN plugin_ib_educate_booking_has_schedules hs ON hs.schedule_id = s.id AND hs.deleted = 0 AND s.`delete` = 0\n		INNER JOIN plugin_ib_educate_bookings b ON hs.booking_id = b.booking_id AND b.`delete` = 0 AND b.booking_status in (2, 4, 5)\r\n		INNER JOIN plugin_contacts3_contacts students ON b.contact_id = students.id\n		INNER JOIN plugin_courses_courses co ON s.course_id = co.id\n		INNER JOIN plugin_contacts3_contacts teachers ON s.trainer_id = teachers.id\n		INNER JOIN plugin_courses_locations l ON s.location_id = l.id\n		LEFT JOIN plugin_courses_locations pl ON l.parent_id = pl.id\n	WHERE \'{!DASHBOARD-FROM!}\' <= b.created_date AND \'{!DASHBOARD-TO!}\' >= b.created_date\n	ORDER BY b.booking_id\n' WHERE (`name` in ('Bookings By Teacher', 'Bookings By Room', 'Bookings By Location', 'Bookings By Course', 'Bookings By Day', 'Bookings By Month'));

UPDATE `plugin_reports_reports` SET `sql`='SELECT b.booking_id AS `booking id`,  CONCAT_WS(\' \', students.first_name, students.last_name) AS `student`, pl.name AS `location`, l.name AS `room`, co.title AS `course`, s.name AS `schedule`, CONCAT_WS(\' \', teachers.first_name, teachers.last_name) AS `teacher`, e.datetime_start AS `timeslot`, IF(i.attending, \'Yes\', \'No\') AS `attending`, i.timeslot_status AS `status`\n	FROM plugin_courses_schedules_events e INNER JOIN plugin_courses_schedules s ON s.id = e.schedule_id AND s.`delete` = 0 AND e.`delete` = 0\n		INNER JOIN plugin_ib_educate_booking_items i ON e.id = i.period_id AND i.`delete` = 0\n		INNER JOIN plugin_ib_educate_bookings b ON i.booking_id = b.booking_id AND b.`delete` = 0 AND b.booking_status in (2, 4, 5)\r\n		INNER JOIN plugin_contacts3_contacts students ON b.contact_id = students.id\n		INNER JOIN plugin_courses_courses co ON s.course_id = co.id\n		INNER JOIN plugin_courses_locations l ON s.location_id = l.id\n		LEFT JOIN plugin_courses_locations pl ON l.parent_id = pl.id\r\n		LEFT JOIN plugin_contacts3_contacts teachers ON s.trainer_id = teachers.id\n	WHERE \'{!DASHBOARD-FROM!}\' <= e.datetime_start AND DATE_ADD(\'{!DASHBOARD-TO!}\', INTERVAL 1 DAY) > e.datetime_start\n	ORDER BY e.datetime_start ASC\r\n' WHERE (`name` in ('Attendance By Month', 'Attendance By Day', 'Attendance By Course', 'Attendance By Location', 'Attendance By Room', 'Attendance By Teacher'));

UPDATE `plugin_reports_reports` SET `sql`='SELECT b.booking_id AS `booking id`,  CONCAT_WS(\' \', students.first_name, students.last_name) AS `student`, pl.name AS `location`, l.name AS `room`, co.title AS `course`, s.name AS `schedule`, e.datetime_start AS `timeslot`, IF(i.attending, \'Yes\', \'No\') AS `attending`, i.timeslot_status AS `status`\n	FROM plugin_contacts3_contacts ca\n		INNER JOIN plugin_contacts3_contact_has_notifications n \n			ON (ca.id = n.contact_id OR ca.notifications_group_id = n.group_id) AND n.notification_id = 1\n		INNER JOIN engine_users u ON n.`value` = u.email\n		INNER JOIN plugin_courses_schedules_events e ON ca.id = e.trainer_id AND e.`delete` = 0\n		INNER JOIN plugin_courses_schedules s ON s.id = e.schedule_id AND s.`delete` = 0\n		INNER JOIN plugin_ib_educate_booking_items i ON e.id = i.period_id AND i.`delete` = 0\n		INNER JOIN plugin_ib_educate_bookings b ON i.booking_id = b.booking_id AND b.`delete` = 0 AND b.booking_status in (2, 4, 5)\r\n		INNER JOIN plugin_contacts3_contacts students ON b.contact_id = students.id\n		INNER JOIN plugin_courses_courses co ON s.course_id = co.id\n		INNER JOIN plugin_courses_locations l ON s.location_id = l.id\n		LEFT JOIN plugin_courses_locations pl ON l.parent_id = pl.id\n	WHERE \'{!DASHBOARD-FROM!}\' <= e.datetime_start AND DATE_ADD(\'{!DASHBOARD-TO!}\', INTERVAL 1 DAY) > e.datetime_start AND u.id = \'{!me!}\'\r\n	ORDER BY e.datetime_start ASC' WHERE (`name` in ('My Attendance By Month', 'My Attendance By Day', 'My Attendance By Course', 'My Attendance By Location', 'My Attendance By Room', 'My Attendance By Student'));

UPDATE `plugin_reports_reports` SET `sql`='SELECT DISTINCT pl.name AS `location`, l.name AS `room`, co.id as `course id`, co.title as `course`,  s.id,  s.name as `schedule`, e.datetime_start AS `timeslot`\r\n			FROM plugin_contacts3_contacts ca\r\n				INNER JOIN plugin_contacts3_contact_has_notifications n \r\n					ON (ca.id = n.contact_id OR ca.notifications_group_id = n.group_id) AND n.notification_id = 1\r\n				INNER JOIN engine_users u ON n.`value` = u.email\r\n				INNER JOIN plugin_courses_schedules_events e ON ca.id = e.trainer_id AND e.`delete` = 0\r\n				INNER JOIN plugin_courses_schedules s ON s.id = e.schedule_id AND s.`delete` = 0\r\n				INNER JOIN plugin_courses_courses co ON s.course_id = co.id\r\n				INNER JOIN plugin_courses_locations l ON s.location_id = l.id\r\n				LEFT JOIN plugin_courses_locations pl ON l.parent_id = pl.id\r\n			WHERE \'{!DASHBOARD-FROM!}\' <= e.datetime_start AND DATE_ADD(\'{!DASHBOARD-TO!}\', INTERVAL 1 DAY) > e.datetime_start AND u.id = \'{!me!}\'\r\n			ORDER BY e.datetime_start ASC, `location`, `course`, `schedule`\r\n' WHERE (`name` in ('My Roll Calls By Month', 'My Roll Calls By Day', 'My Roll Calls By Course', 'My Roll Calls By Location', 'My Roll Calls By Room', 'My Roll Calls By Student'));



